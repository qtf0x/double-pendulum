; Rendering options
; AntiAliasing -> Level of anti-aliasing to apply globally to the rendered image (powers of 2, <= 16, lower to improve performance)
; CirclePointCount -> Number of sides used to create all circles (anything above ~20 will usually look smooth, lower to improve performance)
; VSync -> Turns VSync on or off (behavior will depend on your graphics driver settings)
; FramerateLimit -> Limits the framerate to some upper bound (shouldn't need to use w/ V-Sync enabled)
[Rendering]
AntiAliasing=16
CirclePointCount=100
VSync=true
FramerateLimit=117

; Simulation constants
; GravitationalConstant -> Value of the universal gravitational constant (don't use real value, keep inverse ratio of G=1 : FramerateLimit=60 for natural-looking motion, larger = faster / smaller = slower, negative = upside down)
[Simulation]
GravitationalConstant=0.5128205128205

; Options for initial size of render window and placement of double pendulum
; WindowWidth -> Initial width, in pixels, of render window
; WindowHeight -> Initial height, in pixels, of render window
; StartPosX -> Initial x-position, in pixels, of pendulum stem w/in window
; StartPosY -> Initial y-position, in pixels, of pendulum stem w/in window
[Size and Position]
WindowWidth=2560
WindowHeight=1440
StartPosX=1280
StartPosY=720

; Options for initial conditions of pendulum 1 (top)
; StartAngle -> Initial angle, in radians (0 = vertical downwards, counter-clockwise is positive, and you can use constants from cmath library like M_PI, M_PI_2, or M_PI_4)
; ArmLength -> Length, in pixels, of pendulum arm (units don't matter only magnitude relative to other values)
; BobMass -> Mass of bob on end of pendulum (units don't matter only magnitude relative to other values, determines radius of visualization)
[Initial Conditions Pendulum 1]
StartAngle=1.570796
ArmLength=345
BobMass=25

; Options for initial conditions of pendulum 2 (bottom)
; StartAngle -> Initial angle, in radians (0 = vertical downwards, counter-clockwise is positive, and you can use constants from cmath library like M_PI, M_PI_2, or M_PI_4)
; ArmLength -> Length, in pixels, of pendulum arm (units don't matter only magnitude relative to other values)
; BobMass -> Mass of bob on end of pendulum (units don't matter only magnitude relative to other values, determines radius of visualization)
[Initial Conditions Pendulum 2]
StartAngle=1.570796
ArmLength=345
BobMass=25

; Options to control path tracing of pendulum 2's bob
; LineTracing -> Type of tracing to draw (circles or lines)
; TraceColorRed -> Red value [0, 255] for custom path color
; TraceColorGreen -> Green value [0, 255] for custom path color
; TraceColorBlue -> Blue value [0, 255] for custom path color
; TraceColorAlpha -> Alpha value [0, 255] for custom path color
; TraceCircleRadius -> Radius, in pixels, of path circles
[Path Tracing]
LineTracing=false
TraceCircleRadius=3
TraceColorRed=200
TraceColorGreen=100
TraceColorBlue=50
TraceColorAlpha=255

[DEFAULT]
AntiAliasing=16
CirclePointCount=100
VSync=true
FramerateLimit=60
GravitationalConstant=1
WindowWidth=1920
WindowHeight=1080
StartPosX=960
StartPosY=540
StartAngle=1.570796
ArmLength=250
BobMass1=20
LineTracing=false
TraceCircleRadius=3
TraceColorRed=255
TraceColorGreen=0
TraceColorBlue=255
TraceColorAlpha=255